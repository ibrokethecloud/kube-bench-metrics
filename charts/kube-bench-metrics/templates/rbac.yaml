apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-bench-metrics
automountServiceAccountToken: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "kube-metrics-wrapper.name" . }}-cluster
rules:
- apiGroups: [""] 
  resources: ["pods","nodes"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-bench-metrics-role-binding
subjects:
- kind: ServiceAccount
  name: kube-bench-metrics
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole 
  name: {{ include "kube-metrics-wrapper.name" . }}-cluster
  apiGroup: rbac.authorization.k8s.io
{{ if .Values.psp.enabled }}
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: kube-bench-metrics
spec:
  allowPrivilegeEscalation: false
  fsGroup:
    rule: RunAsAny
  hostPID: true
  requiredDropCapabilities:
  - ALL
  runAsGroup:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  volumes:
  - configMap
  - emptyDir
  - projected
  - secret
  - downwardAPI
  - hostPath
  - persistentVolumeClaim
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kube-bench-metrics-psp
  namespace: {{ .Release.Namespace }}
rules:
- apiGroups:
  - extensions
  resourceNames:
  - kube-bench-metrics
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kube-bench-metrics-psp
subjects:
- kind: ServiceAccount
  name: kube-bench-metrics
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role 
  name: kube-bench-metrics-psp
  apiGroup: rbac.authorization.k8s.io
{{ end }}
